{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","mode","href","title","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","role","onClick","toggleMode","htmlFor","greenbccolor","TextForm","text","setText","useState","Fragment","style","backgroundColor","color","heading","value","onChange","event","target","rows","border","handleupclick","newtext","toUpperCase","showAlert","handlelwclick","toLowerCase","handlecopyclick","navigator","clipboard","writeText","split","length","prototype","PropTypes","string","isRequired","AboutText","defaultProps","Alert","alert","word","Lower","charAt","slice","Capitalize","msg","App","setMode","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.467be802.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <a className=\"navbar-brand\" href=\"#\">\r\n        {props.title}\r\n      </a>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"/navbarSupportedContent\"\r\n        aria-controls=\"navbarSupportedContent\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item active\">\r\n            <a className=\"nav-link\" href=\"#\">\r\n              Home<span className=\"sr-only\"></span>\r\n            </a>\r\n          </li>\r\n          <li className=\"na~v-item\">\r\n            {/* <Link className=\"nav-link\" to=\"/about.js\">\r\n              {props.AboutText}\r\n            </Link> */}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n      {/* buttom 1 */}\r\n      <div\r\n        className={`form-check form-switch mx-3 text-${\r\n          props.mode === \"dark\" ? \"light\" : \"dark\"\r\n        }`}\r\n      >\r\n        <input\r\n          className=\"form-check-input\"\r\n          type=\"checkbox\"\r\n          role=\"switch\"\r\n          id=\"flexSwitchCheckDefault\"\r\n          onClick={props.toggleMode}\r\n        />\r\n        <label className=\"form-check-labelt\" htmlFor=\"flexSwitchCheckDefault\">\r\n          enable DarkMode\r\n        </label>\r\n      </div>\r\n\r\n      {/* buttom 2 */}\r\n      <div\r\n        className={`form-check form-switch text-${\r\n          props.mode === \"dark\" ? \"light\" : \"dark\"\r\n        }`}\r\n      >\r\n        <input\r\n          className=\"form-check-input bg-green\"\r\n          type=\"checkbox\"\r\n          role=\"switch\"\r\n          id=\"flexSwitchCheckDefault\"\r\n          onClick={props.greenbccolor}\r\n        />\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">\r\n          enable Pinkmode\r\n        </label>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.prototype = {\r\n  title: PropTypes.string.isRequired,\r\n  AboutText: PropTypes.string.isRequired,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"title\",\r\n  AboutText: \"About Us\",\r\n};\r\n","import React, { useState } from \"react\";\r\n// import Copy from \"copy-to-TextForm\";\r\nexport default function TextForm(props) {\r\n  \r\n  const [text, setText] = useState(\"enter the text\");\r\n  // Uppercase\r\n  const handleupclick = () => {\r\n    // console.log(\"Click to Uppercase\" + text)\r\n    let newtext = text.toUpperCase();\r\n    setText(newtext);\r\n    props.showAlert(\"Convert to Uppercase\",\"success\")\r\n  };\r\n\r\n  // lowercase\r\n  const handlelwclick = () => {\r\n    // console.log(\"Click to Lowercase\" + text)\r\n    let newtext = text.toLowerCase();\r\n    setText(newtext);\r\n    props.showAlert(\"Convert to Lowercase\",\"success\")\r\n  };\r\n\r\n  // Copy the text\r\n  const handlecopyclick = () => {\r\n    navigator.clipboard.writeText(text);\r\n    props.showAlert(\"copy the text\",\"success\")\r\n  };\r\n\r\n  // onclick function\r\n  const clickchange = (event) => {\r\n    setText(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{backgroundColor:props.mode==='light'? 'dark':'light'}}>\r\n        <h1 style={{color:props.mode==='light'? 'black':'white'}}>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={clickchange}\r\n            id=\"mybox\"\r\n            rows=\"8\" \r\n            style={{backgroundColor:props.mode==='light'? 'white':'#b5b4a6', color:props.mode==='light'? 'black':'white'}}\r\n          ></textarea>\r\n        </div>\r\n        <button className={`btn btn-primary mx-2`}  style={{backgroundColor:props.mode==='light'? 'primary':'#b5b4a6',border:'1px solid white'}} onClick={handleupclick}>\r\n          Convert to UpperCase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\"  style={{backgroundColor:props.mode==='light'? 'primary':'#b5b4a6',border:'1px solid white'}} onClick={handlelwclick}>\r\n          Convert to lowerCase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" style={{backgroundColor:props.mode==='light'? 'primary':'#b5b4a6',border:'1px solid white'}} onClick={handlecopyclick}>\r\n          Copy the text\r\n        </button>\r\n      </div>\r\n      <div className=\"container mb-4\" style={{color:props.mode==='light'? 'black':'white'}}>\r\n        <h1>Summary of the text</h1>\r\n        <p>\r\n          {text.split(\" \").length} World and {text.length} Charector\r\n        </p>\r\n        <p>{0.008 * text.split(\" \").length} minutes read</p>\r\n\r\n        <p>{text.split(\".\").length} Paregraph</p>\r\n\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text:'enter the text for a previwe'}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n  ","import React  from 'react'\r\n\r\nfunction Alert(props) {\r\n  \r\n  const Capitalize = (word) => {\r\n    const Lower = word.toLowerCase()\r\n    return Lower.charAt(0).toUpperCase() + Lower.slice(1);\r\n  }\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{Capitalize(props.alert.type)}</strong> :{props.alert.msg}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert;\r\n","//cd react_tutorial\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport React from \"react\";\n\n// import About from './Components/About.js';\nimport Navbar from \"./Components/Navbar.js\";\nimport TextForm from \"./Components/TextForm.js\";\nimport Alert from \"./Components/Alert.js\";\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n  };\n  \n  setTimeout(() => {\n    setAlert(null)\n  }, 2000);\n\n  // function 1\n  const toggleMode = () => {\n    if (mode === \"dark\") {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been enabled\",\"success\")\n      document.title = \"TextUtils - Lightmode\"\n\n      // setInterval(() => {\n      //   document.title = \"TextUtils so good\"\n      // }, 1000);\n      // setInterval(() => {\n      //   document.title = \"install TextUtils and cedit $1000 \"\n      // }, 100);\n    }\n     else {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"rgb(7 5 54)\";\n      showAlert(\"Dark mode has been enabled\",\"success\")\n      document.title = \"TextUtils - Darkmode\"\n    }\n\n  };\n\n  const greenbccolor = () =>{\n    if (mode === \"light\" || mode === \"dark\") {\n      setMode(\"success\");\n      document.body.style.backgroundColor = \"rgb(123 179 108 / 92%)\";\n      showAlert(\"green mode has been enabled\",\"success\")\n      document.title = \"TextUtils - Greenmode\"\n    }\n    else{\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been enabled\",\"success\")\n      document.title = \"TextUtils - Lightmode\"\n    }\n    \n  }\n  return (\n    <>\n    {/* <Router> */}\n      <Navbar\n        title=\"TextUtils\"\n        AboutText=\"AboutTextUtils\"\n        toggleMode={toggleMode}\n        mode={mode}\n        greenbccolor={greenbccolor}/>\n\n      <div className=\"container my-3\">\n        <Alert alert={alert} />\n        {/* <Routes> */}\n          {/* /users/ -->component-1 \n              /users/home -->component-2 that is use to exact  */}\n          {/* <Route exact path=\"/about.js\" element={<About/>}/> */}\n          {/* <Route exact path=\"/\" element={<TextForm heading=\"Enter the text Analyze\" greenbccolor={greenbccolor} showAlert={showAlert} mode={mode} />}/>   */}\n        {/* </Routes> */}\n        <TextForm heading=\"Enter the text Analyze\" greenbccolor={greenbccolor} showAlert={showAlert} mode={mode} />\n\n        {/* <About/> */}\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}